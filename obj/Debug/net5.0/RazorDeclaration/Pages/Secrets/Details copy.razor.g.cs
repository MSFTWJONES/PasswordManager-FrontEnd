// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace keyvault.Pages.Secrets
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using keyvault;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "c:\Users\wjones\source\repos\keyvault\keyvault.web\_Imports.razor"
using keyvault.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "c:\Users\wjones\source\repos\keyvault\keyvault.web\Pages\Secrets\Details copy.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "c:\Users\wjones\source\repos\keyvault\keyvault.web\Pages\Secrets\Details copy.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "c:\Users\wjones\source\repos\keyvault\keyvault.web\Pages\Secrets\Details copy.razor"
using web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "c:\Users\wjones\source\repos\keyvault\keyvault.web\Pages\Secrets\Details copy.razor"
           [Authorize]

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Secrets/{id}")]
    public partial class Details_copy : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 14 "c:\Users\wjones\source\repos\keyvault\keyvault.web\Pages\Secrets\Details copy.razor"
       
    [Parameter]
    public string id { get; set; }

    private SecretModel secretModel;
    private HttpClient _httpClient;

    protected override async Task OnInitializedAsync()
    {
        if( id == null)
        {
            NavManager.NavigateTo("/secrets");
        }
        
        _httpClient = HttpClientFactory.CreateClient(config["Keyvault:ApiClientName"]);

        try 
        {
                    var dataRequest = await _httpClient.GetAsync(String.Format("{0}/secret/{1}",config["Keyvault:APIBaseUrl"],id));
                    if (dataRequest.IsSuccessStatusCode)
                    {
                        secretModel = await dataRequest.Content.ReadFromJsonAsync<SecretModel>();
                    }
        }
        catch(InvalidOperationException exception)
        {
            throw exception;
        }
        catch(AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.Extensions.Configuration.IConfiguration config { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHttpClientFactory HttpClientFactory { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHttpClientFactory ClientFactory { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IAccessTokenProvider TokenProvider { get; set; }
    }
}
#pragma warning restore 1591
